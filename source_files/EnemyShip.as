//The EnemyShip class is commented heavily in Shootorial 4.//Only new additions will be commented here.class EnemyShip extends MovieClip{	var speed;		//We have added this variable to dictate how often to shoot an enemy missile.	var shootTimer;		function onLoad()	{		_x = 700;		_y = Math.random()*250 + 50;		speed = Math.random()*5 + 5;				//We set the enemy's shootTimer to zero.		shootTimer = 0;	}		function onEnterFrame()	{		_x -= speed;		if(_x < -100)		{			this.removeMovieClip();		}				//We hit test this enemy ship with the hero ship at frame rate		if(this.hitTest(_root.ship))		{			//if this enemy is hitting the hero ship, make this enemy explode			explode();		}				//At frame rate (30 times a second) we increment the shootTimer by one		shootTimer +=1;				//If the timer has reached 30 (30 frames, one second), enough time has passed and we have this enemy shoot a missile.		if(shootTimer > 30)		{			//Reset the shootTimer to zero so it has to count up again before this enemy shoots another missile			shootTimer = 0;			//attach an Enemy Missile to the stage			var missile = _root.attachMovie("EnemyMissile","EnemyMissile" + _root.getNextHighestDepth(), _root.getNextHighestDepth());			//position the missile			missile._x = _x - 50;			missile._y = _y + 2;		}	}		//this is a custom function we wrote that does all the logic we want to happen when an enemy explodes	function explode()	{		//First we attach an Explosion to the stage		var explosion = _root.attachMovie("Explosion","Explosion" + _root.getNextHighestDepth(),_root.getNextHighestDepth());		//We set the Explosion's position to match this enemy's position on stage		explosion._x = _x;		explosion._y = _y;		//Then we remove this enemy movie clip from stage.		this.removeMovieClip();	}}